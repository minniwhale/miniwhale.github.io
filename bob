<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Meme Creator</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f7f9fc;
      color: #333;
    }

    #top-text {
      text-align: center;
      font-size: 36px;
      margin-bottom: 20px;
      color: #222;
    }

    #layout-container {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      gap: 20px;
    }

    #div1 {
      width: 1000px;
      height: 500px;
      padding: 20px;
      border: 2px solid #ddd;
      position: relative;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      overflow: hidden;
    }

    #background {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 0;
      object-fit: cover;
      opacity: 0.5;
      display: none;
    }

    #canvas {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 1000;
    }

    #image-options {
      display: flex;
      flex-direction: column;
      gap: 20px;
      position: relative;
      left: -1in; /* Moved 1 inch to the left */
    }

    .drag-img {
      width: 100px;
      height: 100px;
      cursor: pointer;
      transition: transform 0.3s ease;
    }

    .drag-img:hover {
      transform: scale(1.1);
    }

    .upload-section {
      margin-bottom: 20px;
      background: #fff;
      padding: 10px;
      border-radius: 5px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      position: relative;
      left: -1in; /* Moved 1 inch to the left */
    }

    .upload-section h2 {
      font-size: 18px;
      margin-bottom: 10px;
    }

    #controls-container {
      text-align: center;
      margin-top: 60px; /* Move controls up by 2.5 inches */
    }

    #controls {
      margin-top: 10px;
    }

    #controls button {
      padding: 12px 24px;
      margin: 0 10px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.3s ease;
    }

    #controls button:hover {
      background-color: #0056b3;
      transform: scale(1.1);
    }

    #controls button.undo {
      background-color: #28a745;
    }

    #controls button.clear {
      background-color: #dc3545;
    }

    #controls button.undo:hover {
      background-color: #218838;
    }

    #controls button.clear:hover {
      background-color: #c82333;
    }

    #category-buttons {
      display: flex;
      justify-content: space-around;
      margin-bottom: 20px; /* Space below buttons */
    }

    #category-buttons button {
      padding: 12px 24px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.3s ease;
    }

    #category-buttons button:hover {
      background-color: #0056b3;
      transform: scale(1.1);
    }

    .hidden {
      display: none;
    }

    .selected-image {
      border: 2px solid #007bff;
    }

    #resize-controls {
      display: none;
      margin-top: 10px;
      text-align: center;
    }

    #resizeSlider {
      display: none;
      width: 100%;
    }

    #doneButton {
      display: none;
      padding: 12px 24px;
      background-color: #28a745;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.3s ease;
      margin-top: 10px;
    }

    #doneButton:hover {
      background-color: #218838;
      transform: scale(1.1);
    }
  </style>
</head>
<body>

<!-- Header -->
<p id="top-text">Create your own meme!</p>

<!-- Controls for selecting categories -->
<div id="category-buttons">
  <button onclick="showCategory('body')">Body</button>
  <button onclick="showCategory('sunglasses')">Sunglasses</button>
  <button onclick="showCategory('hat')">Hat</button>
</div>

<!-- Container for drop zone and controls -->
<div id="layout-container">
  <!-- Drop zone for images and drawing -->
  <div id="div1" ondrop="drop(event)" ondragover="allowDrop(event)">
    <img id="background"> <!-- Background image -->
    <canvas id="canvas"></canvas> <!-- Drawing canvas -->
  </div>

  <!-- Image options grouped by category -->
  <div id="image-options">
    <!-- Body Images -->
    <div id="body-container" class="group category">
      <h2>Body</h2>
      <img id="Billy" src="https://i.imgur.com/X9ljrDP.jpg" class="drag-img body-img" draggable="true" ondragstart="drag(event)">
      <img id="drag2" src="https://imgur.com/OJs6kzK.jpg" class="drag-img body-img" draggable="true" ondragstart="drag(event)">
      <img id="drag5" src="https://imgur.com/C1aTec0.jpg" class="drag-img body-img" draggable="true" ondragstart="drag(event)">
      <img id="drag11" src="https://imgur.com/72pM7Tt.jpg" class="drag-img body-img" draggable="true" ondragstart="drag(event)">
      <img id="drag12" src="https://imgur.com/EOYrPYT.jpg" class="drag-img body-img" draggable="true" ondragstart="drag(event)">
    </div>

    <!-- Sunglasses Images (Hidden initially) -->
    <div id="sunglasses-container" class="group category hidden">
      <h2>Sunglasses</h2>
      <img id="drag4" src="https://imgur.com/RquKhwJ.jpg" class="drag-img" draggable="true" ondragstart="drag(event)">
      <img id="drag3" src="https://imgur.com/ymMYHOR.jpg" class="drag-img" draggable="true" ondragstart="drag(event)">
    </div>

    <!-- Hat Images (Hidden initially) -->
    <div id="hat-container" class="group category hidden">
      <h2>Hat</h2>
      <img id="drag22" src="https://imgur.com/u6ETj9W.jpg" class="drag-img" draggable="true" ondragstart="drag(event)">
      <img id="drag17" src="https://imgur.com/qcpVdAE.jpg" class="drag-img large-img" draggable="true" ondragstart="drag(event)">
      <img id="drag15" src="https://imgur.com/UNV8KRx.jpg" class="drag-img" draggable="true" ondragstart="drag(event)">
      <img id="drag23" src="https://imgur.com/xNGk6nB.jpg" class="drag-img" draggable="true" ondragstart="drag(event)">
    </div>

    <!-- Upload sections -->
    <div class="upload-section">
      <h2>Upload a Background</h2>
      <input type="file" id="backgroundUpload" accept="image/*" onchange="handleBackgroundUpload(event)">
    </div>
    
    <div class="upload-section">
      <h2>Upload Your Own Image</h2>
      <input type="file" id="imageUpload" accept="image/*" onchange="handleImageUpload(event)">
    </div>
  </div>
</div>

<!-- Controls for drawing and downloading -->
<div id="controls-container">
  <div id="controls">
    <button onclick="toggleDraw()">Toggle Draw</button>
    <button onclick="erase()">Erase</button>
    <button onclick="clearBoard()" class="clear">Clear</button>
    <button onclick="undo()" class="undo">Undo</button>
    <button onclick="downloadImage()">Download</button>
  </div>

  <!-- Resize Controls -->
  <div id="resize-controls">
    <input type="range" id="resizeSlider" min="50" max="300" value="100" oninput="resizeImage()">
    <button id="doneButton" onclick="hideResizeControls()">Done</button>
  </div>
</div>

<script>
  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');
  var background = document.getElementById('background');
  var isDrawing = false;
  var existingImages = new Set();
  var imageHistory = [];
  var selectedImage = null;
  var resizeControlsVisible = false;
  var offsetX, offsetY, currentDragImage;

  function allowDrop(event) {
    event.preventDefault();
  }

  function drag(event) {
    event.dataTransfer.setData('text', event.target.id);
  }

  function drop(event) {
    event.preventDefault();
    var id = event.dataTransfer.getData('text');
    var image = document.getElementById(id);

    if (!image) {
      return;
    }

    if (image.parentElement.id === 'div1') {
      currentDragImage = image;
      offsetX = event.clientX - image.getBoundingClientRect().left;
      offsetY = event.clientY - image.getBoundingClientRect().top;
    } else {
      var clone = image.cloneNode(true);
      var rect = canvas.getBoundingClientRect();
      var x = event.clientX - rect.left;
      var y = event.clientY - rect.top;
      clone.style.position = 'absolute';
      clone.style.left = `${x}px`;
      clone.style.top = `${y}px`;
      clone.classList.add('draggable');
      clone.classList.add('selected-image');
      document.querySelector('#div1').appendChild(clone);
      selectedImage = clone;
      showResizeControls();
    }
  }

  function handleDragOver(event) {
    event.preventDefault();
  }

  function handleDragMove(event) {
    if (currentDragImage) {
      var rect = canvas.getBoundingClientRect();
      currentDragImage.style.left = `${event.clientX - rect.left - offsetX}px`;
      currentDragImage.style.top = `${event.clientY - rect.top - offsetY}px`;
    }
  }

  function handleDragEnd() {
    currentDragImage = null;
  }

  function showResizeControls() {
    if (!resizeControlsVisible) {
      document.getElementById('resize-controls').style.display = 'block';
      document.getElementById('resizeSlider').style.display = 'block';
      document.getElementById('doneButton').style.display = 'block';
      resizeControlsVisible = true;
    }
  }

  function resizeImage() {
    if (selectedImage) {
      var scale = document.getElementById('resizeSlider').value;
      selectedImage.style.width = scale + 'px';
      selectedImage.style.height = scale + 'px';
    }
  }

  function hideResizeControls() {
    document.getElementById('resize-controls').style.display = 'none';
    document.getElementById('resizeSlider').style.display = 'none';
    document.getElementById('doneButton').style.display = 'none';
    resizeControlsVisible = false;
    if (selectedImage) {
      selectedImage.style.border = 'none';
    }
    selectedImage = null;
  }

  function toggleDraw() {
    isDrawing = !isDrawing;
    canvas.style.display = isDrawing ? 'block' : 'none';
  }

  function erase() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
  }

  function clearBoard() {
    var container = document.getElementById('div1');
    while (container.firstChild) {
      container.removeChild(container.firstChild);
    }
    existingImages.clear();
    imageHistory = [];
    erase();
  }

  function undo() {
    var lastImage = imageHistory.pop();
    if (lastImage) {
      lastImage.remove();
      existingImages.delete(lastImage.id);
    }
  }

  function downloadImage() {
    var link = document.createElement('a');
    link.download = 'meme.png';
    link.href = canvas.toDataURL();
    link.click();
  }

  function handleBackgroundUpload(event) {
    var file = event.target.files[0];
    if (file) {
      var reader = new FileReader();
      reader.onload = function(e) {
        background.src = e.target.result;
        background.style.display = 'block';
      };
      reader.readAsDataURL(file);
    }
  }

  function handleImageUpload(event) {
    var file = event.target.files[0];
    if (file) {
      var reader = new FileReader();
      reader.onload = function(e) {
        var newImage = new Image();
        newImage.src = e.target.result;
        newImage.className = 'drag-img';
        newImage.draggable = true;
        newImage.id = 'uploaded-img-' + new Date().getTime(); // Unique ID for the new image
        newImage.ondragstart = function(ev) { drag(ev); };
        document.getElementById('image-options').appendChild(newImage);
        newImage.onload = function() {
          newImage.style.width = '100px';
          newImage.style.height = '100px';
        };
      };
      reader.readAsDataURL(file);
    }
  }

  function showCategory(category) {
    document.querySelectorAll('.category').forEach(function(el) {
      el.classList.add('hidden');
    });
    document.getElementById(category + '-container').classList.remove('hidden');
  }

  document.getElementById('div1').addEventListener('dragover', handleDragOver);
  document.getElementById('div1').addEventListener('drop', drop);
  document.addEventListener('mousemove', handleDragMove);
  document.addEventListener('mouseup', handleDragEnd);
</script>

</body>
</html>









